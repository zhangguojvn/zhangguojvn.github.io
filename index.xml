<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>张某的博客</title>
    <link>https://zhangguojvn.github.io/</link>
    <description>Recent content on 张某的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 25 Jun 2022 12:40:51 +0800</lastBuildDate><atom:link href="https://zhangguojvn.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 Grub 构建统一内核映像</title>
      <link>https://zhangguojvn.github.io/posts/building-a-unified-kernel-image-with-grub/</link>
      <pubDate>Sat, 25 Jun 2022 12:40:51 +0800</pubDate>
      
      <guid>https://zhangguojvn.github.io/posts/building-a-unified-kernel-image-with-grub/</guid>
      <description>统一内核映像是单个可执行文件，可以直接从 UEFI 固件启动，或者由引导加载程序自动获取，只需很少或没有配置。
准备 Grub 配置文件 此配置文件和普通 Grub 配置文件一样，一下只是适配我电脑的配置,默认情况下 Grub 的 root 为 (memdisk).
~/SecureBoot/grub.cfg ----- menuentry &amp;#39;Gentoo&amp;#39; --class gentoo --class gnu-linux --class gnu --class os{ insmod all_video linux /vmlinuz root=/dev/sda1 initrd /initramfs.img } 构建 EFI 文件 使用 grub-mkstandalone 构建单一的内核映像, 将命令中的 vmlinuz-5.15.41-gentoo 以及 iniramfs-5.14.41-gentoo 替换为自己的内核及 initramfs.
grub-mkstandalone --direcotry /usr/lib/grub/x86_64-efi --format x86_64-efi --disable-shim-lock --output grub.efi /vmlinuz=/boot/vmlinuz-5.15.41-gentoo /initramfs.img=/boot/initramfs-5.14.41-gentoo /boot/grub/grub.cfg=~/SecureBoot/grub.cfg 签名 EFI 文件 (可选) 如果使用了安全启动，可以对 EFI 文件进行签名.
sbsign --key ~/keys/db.key --cert ~/keys/db.crt --output grub.</description>
    </item>
    
    <item>
      <title>在 Windows 下安装 go-oci8</title>
      <link>https://zhangguojvn.github.io/posts/install-go-oci8-in-windows/</link>
      <pubDate>Fri, 24 Jun 2022 17:20:29 +0800</pubDate>
      
      <guid>https://zhangguojvn.github.io/posts/install-go-oci8-in-windows/</guid>
      <description>介绍如何在 Windows 下安装 Go 的 Oracle 数据库驱动。</description>
    </item>
    
    <item>
      <title>Dracut 原生挂载 OverlayFS Root</title>
      <link>https://zhangguojvn.github.io/posts/dracut-%E5%8E%9F%E7%94%9F%E6%8C%82%E8%BD%BD-overlayfs-root/</link>
      <pubDate>Thu, 12 May 2022 23:40:37 +0800</pubDate>
      
      <guid>https://zhangguojvn.github.io/posts/dracut-%E5%8E%9F%E7%94%9F%E6%8C%82%E8%BD%BD-overlayfs-root/</guid>
      <description>Dracut 配置 需要手动导入模块，不可以使用hostonly模式，即配置中hostonly=&amp;quot;no&amp;quot;。
/etc/dracut.conf ---------- hostonly=&amp;#34;no&amp;#34; add_drivers+=&amp;#34; squashfs overlay &amp;#34; add_dracutmodules+=&amp;#34; dmsquash-live &amp;#34; 因为关闭了 hostonly 模式，所以 lvm 等配置需要手动写入内核参数。
准备镜像 镜像可以放入可挂载文件系统，或直接烧录进分区。在此介绍放入挂载文件系统情况。
镜像内部至少需要 proc,sys,dev。其中 90dmsquash-live 使用 /proc 检测是否为正确的系统格式。98dracut-systemd 使用 usable_root() 函数，该函数使用 /proc,/sys,/dev 检测是否和正确的系统格式。建议也创建 /run 文件夹。
镜像放在内核参数&amp;lt;rd.live.dir&amp;gt;/&amp;lt;rd.live.squashimg&amp;gt;。这两个参数默认值为 LiveOS 和 squashfs.img 即默认放入 LiveOS/squashfs.img 即可。
OverlayFS 持久化分区准备 该分区需要在根目录下创建内核参数 &amp;lt;rd.live.overlay&amp;gt; 目录作为 upperdir。并且在上级目录创建 ovlwork 文件夹作为 workdir。&amp;lt;rd.live.overlay&amp;gt;默认为`/&amp;lt;rd.live.dir&amp;gt;/overlay--&amp;quot;,其中LABEL和UUID为ROOT分区的LABEL和UUID。持久化不仅可以用文件夹，也可以使用文件，在此不介绍。
内核参数 root=live:分区: 存放镜像的分区。 rd.live.overlay=分区:目录: OverlayFS 的 upperdir，目录必须由/开头。 rootfstype=ext4: root 分区的文件类型。 </description>
    </item>
    
    <item>
      <title>Yubikey 配置 PIV 签名</title>
      <link>https://zhangguojvn.github.io/posts/yubikey-%E9%85%8D%E7%BD%AE-piv-%E7%AD%BE%E5%90%8D/</link>
      <pubDate>Fri, 06 May 2022 19:28:44 +0800</pubDate>
      
      <guid>https://zhangguojvn.github.io/posts/yubikey-%E9%85%8D%E7%BD%AE-piv-%E7%AD%BE%E5%90%8D/</guid>
      <description>设置模式 计划只使用 PIV 模式，可以在 yubikey manager 中关闭其他模式。
ykman config mode CCID 启动 pcscd 必须启动 pcscd 否则 yubico-piv-tool 无法发现设备
#systemd systemctl start pcscd #openRC /etc/init.d/pcscd #other /usr/sbin/pcscd &amp;amp; 生成ECDSA密钥 openssl ecparam -out ca.key -name secp384r1 -genkey openssl ec -in ec-secp256k1-priv-key.pem -pubout &amp;gt; secp256k1-pub.pem 生成 RSA 密钥 openssl genrsa -out private.pem 2048 openssl rsa -in private.pem -pubout -out public.pem 导入 yubikey 在以下例子中，将私钥导入 9a 插槽中。关于插槽介绍可以看 官方 的这篇文章。
yubico-piv-tool -s 9a -a import-key -i private.</description>
    </item>
    
    <item>
      <title>Dracut 开机自动创建 Lvm 快照</title>
      <link>https://zhangguojvn.github.io/posts/dracut-%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA-lvm-%E5%BF%AB%E7%85%A7/</link>
      <pubDate>Sat, 30 Apr 2022 17:09:57 +0800</pubDate>
      
      <guid>https://zhangguojvn.github.io/posts/dracut-%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E5%88%9B%E5%BB%BA-lvm-%E5%BF%AB%E7%85%A7/</guid>
      <description>Dracut-056之前版本 内核参数加入以下参数即可,其中 ORIG_LV 为快照源, SNAP_LV 为快照名.每次启动都会删除 SNAP_LV 并创建新的 SNAP_LV .
rd.lvm.snapshot=&amp;#34;ORIG_LV:SNAP_LV&amp;#34; Dracut-056及之后版本 在Dracut-056中删除了快照功能，需要自己创建快照脚本。</description>
    </item>
    
    <item>
      <title>非特权用户使用 Xorg</title>
      <link>https://zhangguojvn.github.io/posts/%E9%9D%9E%E7%89%B9%E6%9D%83%E7%94%A8%E6%88%B7%E4%BD%BF%E7%94%A8-xorg/</link>
      <pubDate>Wed, 20 Apr 2022 19:29:29 +0800</pubDate>
      
      <guid>https://zhangguojvn.github.io/posts/%E9%9D%9E%E7%89%B9%E6%9D%83%E7%94%A8%E6%88%B7%E4%BD%BF%E7%94%A8-xorg/</guid>
      <description>非特权用户使用 Xorg</description>
    </item>
    
    <item>
      <title>自签名安全启动 Grub 设置</title>
      <link>https://zhangguojvn.github.io/posts/%E8%87%AA%E7%AD%BE%E5%90%8D%E5%AE%89%E5%85%A8%E5%90%AF%E5%8A%A8-grub-%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Wed, 20 Apr 2022 03:50:51 +0800</pubDate>
      
      <guid>https://zhangguojvn.github.io/posts/%E8%87%AA%E7%AD%BE%E5%90%8D%E5%AE%89%E5%85%A8%E5%90%AF%E5%8A%A8-grub-%E8%AE%BE%E7%BD%AE/</guid>
      <description>自签名安全启动记录</description>
    </item>
    
    
  </channel>
</rss>
